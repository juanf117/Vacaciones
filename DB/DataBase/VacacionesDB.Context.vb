'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class VacacionesEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=VacacionesEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Empleado() As DbSet(Of Empleado)
    Public Overridable Property Usuario() As DbSet(Of Usuario)
    Public Overridable Property TipoIdentificacion() As DbSet(Of TipoIdentificacion)
    Public Overridable Property VacacionesDescansadas() As DbSet(Of VacacionesDescansadas)
    Public Overridable Property ControlVacaciones() As DbSet(Of ControlVacaciones)

    Public Overridable Function sp_insert_empleado(nombreCompleto As String, idTipoIdentificacion As Nullable(Of Short), numIdentificacion As String, fechaIngreso As Nullable(Of Date), salarioBase As Nullable(Of Decimal), direccion As String) As Integer
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("NombreCompleto", nombreCompleto), New ObjectParameter("NombreCompleto", GetType(String)))

        Dim idTipoIdentificacionParameter As ObjectParameter = If(idTipoIdentificacion.HasValue, New ObjectParameter("idTipoIdentificacion", idTipoIdentificacion), New ObjectParameter("idTipoIdentificacion", GetType(Short)))

        Dim numIdentificacionParameter As ObjectParameter = If(numIdentificacion IsNot Nothing, New ObjectParameter("NumIdentificacion", numIdentificacion), New ObjectParameter("NumIdentificacion", GetType(String)))

        Dim fechaIngresoParameter As ObjectParameter = If(fechaIngreso.HasValue, New ObjectParameter("FechaIngreso", fechaIngreso), New ObjectParameter("FechaIngreso", GetType(Date)))

        Dim salarioBaseParameter As ObjectParameter = If(salarioBase.HasValue, New ObjectParameter("SalarioBase", salarioBase), New ObjectParameter("SalarioBase", GetType(Decimal)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_insert_empleado", nombreCompletoParameter, idTipoIdentificacionParameter, numIdentificacionParameter, fechaIngresoParameter, salarioBaseParameter, direccionParameter)
    End Function

    Public Overridable Function sp_update_empleado(idEmpleado As Nullable(Of Integer), nombreCompleto As String, idTipoIdentificacion As Nullable(Of Short), numIdentificacion As String, fechaIngreso As Nullable(Of Date), salarioBase As Nullable(Of Decimal), direccion As String) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("idEmpleado", idEmpleado), New ObjectParameter("idEmpleado", GetType(Integer)))

        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("NombreCompleto", nombreCompleto), New ObjectParameter("NombreCompleto", GetType(String)))

        Dim idTipoIdentificacionParameter As ObjectParameter = If(idTipoIdentificacion.HasValue, New ObjectParameter("idTipoIdentificacion", idTipoIdentificacion), New ObjectParameter("idTipoIdentificacion", GetType(Short)))

        Dim numIdentificacionParameter As ObjectParameter = If(numIdentificacion IsNot Nothing, New ObjectParameter("NumIdentificacion", numIdentificacion), New ObjectParameter("NumIdentificacion", GetType(String)))

        Dim fechaIngresoParameter As ObjectParameter = If(fechaIngreso.HasValue, New ObjectParameter("FechaIngreso", fechaIngreso), New ObjectParameter("FechaIngreso", GetType(Date)))

        Dim salarioBaseParameter As ObjectParameter = If(salarioBase.HasValue, New ObjectParameter("SalarioBase", salarioBase), New ObjectParameter("SalarioBase", GetType(Decimal)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_update_empleado", idEmpleadoParameter, nombreCompletoParameter, idTipoIdentificacionParameter, numIdentificacionParameter, fechaIngresoParameter, salarioBaseParameter, direccionParameter)
    End Function

    Public Overridable Function sp_delete_vacaciones_descansadas(idVacacionesDescansadas As Nullable(Of Integer)) As Integer
        Dim idVacacionesDescansadasParameter As ObjectParameter = If(idVacacionesDescansadas.HasValue, New ObjectParameter("idVacacionesDescansadas", idVacacionesDescansadas), New ObjectParameter("idVacacionesDescansadas", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_delete_vacaciones_descansadas", idVacacionesDescansadasParameter)
    End Function

    Public Overridable Function sp_insert_vacaciones_descansadas(idEmpleado As Nullable(Of Integer), fecha As Nullable(Of Date), cantidad As Nullable(Of Double), descripcion As String) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("idEmpleado", idEmpleado), New ObjectParameter("idEmpleado", GetType(Integer)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Double)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_insert_vacaciones_descansadas", idEmpleadoParameter, fechaParameter, cantidadParameter, descripcionParameter)
    End Function

    Public Overridable Function sp_update_vacaciones_descansadas(idVacacionesDescansadas As Nullable(Of Integer), fecha As Nullable(Of Date), cantidad As Nullable(Of Double), descripcion As String) As Integer
        Dim idVacacionesDescansadasParameter As ObjectParameter = If(idVacacionesDescansadas.HasValue, New ObjectParameter("idVacacionesDescansadas", idVacacionesDescansadas), New ObjectParameter("idVacacionesDescansadas", GetType(Integer)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Double)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_update_vacaciones_descansadas", idVacacionesDescansadasParameter, fechaParameter, cantidadParameter, descripcionParameter)
    End Function

    Public Overridable Function sp_calcular_vacaciones_empleado(idEmpleado As Nullable(Of Integer), fechaInicio As Nullable(Of Date), fechaFin As Nullable(Of Date)) As Integer
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("idEmpleado", idEmpleado), New ObjectParameter("idEmpleado", GetType(Integer)))

        Dim fechaInicioParameter As ObjectParameter = If(fechaInicio.HasValue, New ObjectParameter("FechaInicio", fechaInicio), New ObjectParameter("FechaInicio", GetType(Date)))

        Dim fechaFinParameter As ObjectParameter = If(fechaFin.HasValue, New ObjectParameter("FechaFin", fechaFin), New ObjectParameter("FechaFin", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_calcular_vacaciones_empleado", idEmpleadoParameter, fechaInicioParameter, fechaFinParameter)
    End Function

    Public Overridable Function sp_select_reporte_vacaciones(idEmpleado As Nullable(Of Integer)) As ObjectResult(Of sp_select_reporte_vacaciones_Result)
        Dim idEmpleadoParameter As ObjectParameter = If(idEmpleado.HasValue, New ObjectParameter("idEmpleado", idEmpleado), New ObjectParameter("idEmpleado", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_select_reporte_vacaciones_Result)("sp_select_reporte_vacaciones", idEmpleadoParameter)
    End Function

End Class
